import fmt "std/fmt";
import bpkg "examples/b";
import wasi "std/wasi";

// jauhar
fn jauhar(a: i64): i64 {
  return a;
}

fn arifin(): i64 {
  return 10+10;
}

fn gcd(a: i64, b: i64): i64 {
  while b != 0 {
    let t = b;
    b = a % b;
    a = t;
  }
  return a;
}

fn gcd_rec(a: i64, b: i64): i64 {
  if b == 0 {
    return a;
  }
  return gcd_rec(b, a % b);
}

fn printifs(n: i64) {
  if n == 0 {
    fmt.print_i64(0);
  } else if n == 1 {
    fmt.print_i64(1);
  } else {
    fmt.print_i64(-1);
  }
}

fn main() {
  fmt.print_i64(10); // 10
  fmt.print_i64(20); // 20
  fmt.print_i64(10+20*30); // 610
  fmt.print_i64(2<<5); // 64
  fmt.print_i64(123%10); // 3
  fmt.print_i64(123/10); // 12
  fmt.print_i64(1 | 2 | 4); // 7
  fmt.print_i64(bpkg.haha()); // 100
  fmt.print_i64(bpkg.hihi(2)); // 4
  fmt.print_i64(bpkg.haha() * bpkg.hihi(2)); // 400
  let x = 12345;
  let y: i64 = 12;
  let z: i64;
  while z < 10 {
    fmt.print_i64(x); // 12345
    z = z + 1;
  }
  let xxxx = 48;
  let yyyy = 60;
  let zzzz = gcd(xxxx, yyyy);
  fmt.print_i64(zzzz); // 12?
  zzzz = gcd_rec(xxxx, yyyy);
  fmt.print_i64(zzzz); // 12?
  fmt.print_i64(x + 1);
  fmt.print_i64(y - 1);
  fmt.print_i64(z + 1);
  fmt.print_i64(x + y + z); // 12357
  if 10 == 10 {
    fmt.print_i64(10); // 10
  }
  if 10 == 11 {
    fmt.print_i64(11); // not shown
  }
  printifs(0);
  printifs(1);
  printifs(2);
  printifs(3);
  let i = 1;
  while i <= 10 {
    fmt.print_i64(i);
    if (i == 9) {
      break;
    }
    if (i == 5) {
      i = i + 2;
      continue;
    }
    i = i + 1;
  }

  let jauhar_str: [*]u8 = "jauhar";
  let arifin_str: [*]u8 = "arifin";

  wasi.fd_write(0 as i32, jauhar_str as i32, 6 as i32, 0 as i32);

  return;
}
